% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forward.R
\name{ForwardDiff}
\alias{ForwardDiff}
\alias{forward.deriv}
\alias{forward.grad}
\alias{forward.jacobian}
\alias{forward.hessian}
\alias{forward.grad.config}
\alias{forward.jacobian.config}
\alias{forward.hessian.config}
\title{Wrapper functions for API of \code{ForwardDiff.jl}.}
\usage{
forward.deriv(f, x)

forward.grad(f, x, cfg = JuliaCall::julia_call("GradientConfig", f, x),
  check = JuliaCall::julia_call("Val{true}"))

forward.jacobian(f, x, cfg = JuliaCall::julia_call("JacobianConfig", f, x),
  check = JuliaCall::julia_call("Val{true}"))

forward.hessian(f, x, cfg = JuliaCall::julia_call("HessianConfig", f, x),
  check = JuliaCall::julia_call("Val{true}"))

forward.grad.config(f, x, chunk = JuliaCall::julia_call("Chunk", x))

forward.jacobian.config(f, x, chunk = JuliaCall::julia_call("Chunk", x))

forward.hessian.config(f, x, chunk = JuliaCall::julia_call("Chunk", x))
}
\arguments{
\item{f}{the function you want to calulate the derivative, gradient and etc.
Note that \code{f(x)} should be a scalar for \code{grad} and \code{hessian},
a vector of length greater than 1 for \code{jacobian},
and could be either a scalar or a vector for \code{deriv}.}

\item{x}{the point where you take the derivative, gradient and etc.
Note that it should be a scalar for \code{deriv} and a vector of length greater than 1 for
\code{grad}, \code{jacobian} and \code{hessian}.}

\item{cfg}{objects of ForwardDiff.AbstractConfig types, which have
information useful to do automatic differentiation for \code{f}.
These types allow the user to easily feed several different parameters to ForwardDiff's API,
such as chunk size, work buffers, and perturbation seed configurations.
ForwardDiff's basic API methods will allocate these types automatically by default,
but you can drastically reduce memory usage if you preallocate them yourself.}

\item{check}{whether to allow tag checking.
Set check to \code{JuliaCall::julia_call("Val{false}")} to disable tag checking for ForwardDiff.
This can lead to perturbation confusion, so should be used with care.}

\item{chunk}{the chunk to construct the Config objects for ForwardDiff.
Its size may be explicitly provided, or omitted,
in which case ForwardDiff will automatically select a chunk size for you.
However, it is highly recommended to specify the chunk size manually when possible.
See
\url{http://www.juliadiff.org/ForwardDiff.jl/stable/user/advanced.html#Configuring-Chunk-Size-1}
for more details.}
}
\value{
\code{forward.deriv}, \code{forward.grad}, \code{forward.jacobian} and \code{forward.hessian} return
the derivative, gradient, jacobian and hessian of \code{f} correspondingly evaluated at \code{x}.
\code{forward.grad.config}, \code{forward.jacobian.config} and \code{forward.hessian.config}
return Config instances based on \code{f`` and}x`,
which contain all the work buffers required to carry out the automatic differentiation.
}
\description{
Wrapper functions for API of \code{ForwardDiff.jl} at
\url{http://www.juliadiff.org/ForwardDiff.jl/stable/user/api.html}.
These functions can help you calculate derivative, gradient, jacobian and hessian
for your functions using forward mode automatic differentiation.
For more details, see \url{http://www.juliadiff.org/ForwardDiff.jl/stable/user/api.html}.
}
